let
    // =========================================================================
    // PARAMETERS
    // =========================================================================
    StartYear = 2019,    // adjust to earliest year you need
    EndYear   = Date.Year(DateTime.LocalNow()) + 1,  // dynamic through next year

    // =========================================================================
    // GENERATE DATE LIST
    // =========================================================================
    StartDate = #date(StartYear, 1, 1),
    EndDate   = #date(EndYear, 12, 31),
    DateList  = List.Dates(StartDate, Duration.Days(EndDate - StartDate) + 1, #duration(1,0,0,0)),

    // =========================================================================
    // CONVERT TO TABLE & ADD COLUMNS
    // =========================================================================
    DateTable = Table.FromList(DateList, Splitter.SplitByNothing(), {"Date"}, null, ExtraValues.Error),
    ChangedType = Table.TransformColumnTypes(DateTable, {{"Date", type date}}),

    // Calendar attributes
    AddYear        = Table.AddColumn(ChangedType, "Year", each Date.Year([Date]), Int64.Type),
    AddQuarter     = Table.AddColumn(AddYear, "Quarter", each "Q" & Number.ToText(Date.QuarterOfYear([Date])), type text),
    AddMonthNum    = Table.AddColumn(AddQuarter, "Month Number", each Date.Month([Date]), Int64.Type),
    AddMonthName   = Table.AddColumn(AddMonthNum, "Month Name", each Date.MonthName([Date]), type text),
    AddMonthShort  = Table.AddColumn(AddMonthName, "Month Short", each Text.Start(Date.MonthName([Date]),3), type text),
    AddDay         = Table.AddColumn(AddMonthShort, "Day", each Date.Day([Date]), Int64.Type),
    AddDayOfWeek   = Table.AddColumn(AddDay, "Day of Week", each Date.DayOfWeek([Date]), Int64.Type),
    AddDayName     = Table.AddColumn(AddDayOfWeek, "Day Name", each Date.DayOfWeekName([Date]), type text),
    AddWeekNum     = Table.AddColumn(AddDayName, "Week Number", each Date.WeekOfYear([Date]), Int64.Type),
    AddYearMonth   = Table.AddColumn(AddWeekNum, "Year-Month", each Text.From(Date.Year([Date])) & "-" & Text.PadStart(Text.From(Date.Month([Date])),2,"0"), type text),

    // Fiscal attributes (example: Fiscal Year starts in July)
    FiscalStartMonth = 7,
    AddFiscalYear  = Table.AddColumn(AddYearMonth, "Fiscal Year", each if Date.Month([Date]) >= FiscalStartMonth then Date.Year([Date])+1 else Date.Year([Date]), Int64.Type),
    AddFiscalQuarter = Table.AddColumn(AddFiscalYear, "Fiscal Quarter", each "FQ" & Number.ToText(((Date.Month([Date]) - FiscalStartMonth + 12) mod 12) \ 3 + 1), type text),

    // =========================================================================
    // FINAL CLEANUP
    // =========================================================================
    Reordered = Table.ReorderColumns(AddFiscalQuarter, {"Date","Year","Quarter","Month Number","Month Name","Month Short","Year-Month","Fiscal Year","Fiscal Quarter","Week Number","Day","Day of Week","Day Name"})
in
    Reordered
